'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.1433
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Ds_Parto"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Ds_Parto
    Inherits Global.System.Data.DataSet
    
    Private tabledt_parto As dt_partoDataTable
    
    Private tabledt_antecedentes As dt_antecedentesDataTable
    
    Private tabledt_nacimiento As dt_nacimientoDataTable
    
    Private relationdt_parto_dt_antecedentes As Global.System.Data.DataRelation
    
    Private relationdt_parto_dt_nacimiento As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dt_parto")) Is Nothing) Then
                MyBase.Tables.Add(New dt_partoDataTable(ds.Tables("dt_parto")))
            End If
            If (Not (ds.Tables("dt_antecedentes")) Is Nothing) Then
                MyBase.Tables.Add(New dt_antecedentesDataTable(ds.Tables("dt_antecedentes")))
            End If
            If (Not (ds.Tables("dt_nacimiento")) Is Nothing) Then
                MyBase.Tables.Add(New dt_nacimientoDataTable(ds.Tables("dt_nacimiento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_parto() As dt_partoDataTable
        Get
            Return Me.tabledt_parto
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_antecedentes() As dt_antecedentesDataTable
        Get
            Return Me.tabledt_antecedentes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_nacimiento() As dt_nacimientoDataTable
        Get
            Return Me.tabledt_nacimiento
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Ds_Parto = CType(MyBase.Clone,Ds_Parto)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("dt_parto")) Is Nothing) Then
                MyBase.Tables.Add(New dt_partoDataTable(ds.Tables("dt_parto")))
            End If
            If (Not (ds.Tables("dt_antecedentes")) Is Nothing) Then
                MyBase.Tables.Add(New dt_antecedentesDataTable(ds.Tables("dt_antecedentes")))
            End If
            If (Not (ds.Tables("dt_nacimiento")) Is Nothing) Then
                MyBase.Tables.Add(New dt_nacimientoDataTable(ds.Tables("dt_nacimiento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledt_parto = CType(MyBase.Tables("dt_parto"),dt_partoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_parto) Is Nothing) Then
                Me.tabledt_parto.InitVars
            End If
        End If
        Me.tabledt_antecedentes = CType(MyBase.Tables("dt_antecedentes"),dt_antecedentesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_antecedentes) Is Nothing) Then
                Me.tabledt_antecedentes.InitVars
            End If
        End If
        Me.tabledt_nacimiento = CType(MyBase.Tables("dt_nacimiento"),dt_nacimientoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_nacimiento) Is Nothing) Then
                Me.tabledt_nacimiento.InitVars
            End If
        End If
        Me.relationdt_parto_dt_antecedentes = Me.Relations("dt_parto_dt_antecedentes")
        Me.relationdt_parto_dt_nacimiento = Me.Relations("dt_parto_dt_nacimiento")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "Ds_Parto"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Ds_Parto.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledt_parto = New dt_partoDataTable
        MyBase.Tables.Add(Me.tabledt_parto)
        Me.tabledt_antecedentes = New dt_antecedentesDataTable
        MyBase.Tables.Add(Me.tabledt_antecedentes)
        Me.tabledt_nacimiento = New dt_nacimientoDataTable
        MyBase.Tables.Add(Me.tabledt_nacimiento)
        Me.relationdt_parto_dt_antecedentes = New Global.System.Data.DataRelation("dt_parto_dt_antecedentes", New Global.System.Data.DataColumn() {Me.tabledt_parto.CodPartoColumn}, New Global.System.Data.DataColumn() {Me.tabledt_antecedentes.CodPartoColumn}, false)
        Me.Relations.Add(Me.relationdt_parto_dt_antecedentes)
        Me.relationdt_parto_dt_nacimiento = New Global.System.Data.DataRelation("dt_parto_dt_nacimiento", New Global.System.Data.DataColumn() {Me.tabledt_parto.CodPartoColumn}, New Global.System.Data.DataColumn() {Me.tabledt_nacimiento.CodPartoColumn}, false)
        Me.Relations.Add(Me.relationdt_parto_dt_nacimiento)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_parto() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_antecedentes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_nacimiento() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Ds_Parto = New Ds_Parto
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub dt_partoRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_partoRowChangeEvent)
    
    Public Delegate Sub dt_antecedentesRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_antecedentesRowChangeEvent)
    
    Public Delegate Sub dt_nacimientoRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_nacimientoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_partoDataTable
        Inherits Global.System.Data.TypedTableBase(Of dt_partoRow)
        
        Private columnCodParto As Global.System.Data.DataColumn
        
        Private columnCodHospitalizacion As Global.System.Data.DataColumn
        
        Private columnTipoParto As Global.System.Data.DataColumn
        
        Private columnAnestesia As Global.System.Data.DataColumn
        
        Private columnCordonUmbilical As Global.System.Data.DataColumn
        
        Private columnLiquidoAmniotico As Global.System.Data.DataColumn
        
        Private columnPlacenta As Global.System.Data.DataColumn
        
        Private columnReanimacion As Global.System.Data.DataColumn
        
        Private columnDrogasUsadas As Global.System.Data.DataColumn
        
        Private columnpaciente As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_parto"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodHospitalizacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodHospitalizacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AnestesiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnestesia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CordonUmbilicalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCordonUmbilical
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LiquidoAmnioticoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLiquidoAmniotico
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PlacentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlacenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReanimacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReanimacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DrogasUsadasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrogasUsadas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pacienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaciente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_partoRow
            Get
                Return CType(Me.Rows(index),dt_partoRow)
            End Get
        End Property
        
        Public Event dt_partoRowChanging As dt_partoRowChangeEventHandler
        
        Public Event dt_partoRowChanged As dt_partoRowChangeEventHandler
        
        Public Event dt_partoRowDeleting As dt_partoRowChangeEventHandler
        
        Public Event dt_partoRowDeleted As dt_partoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_partoRow(ByVal row As dt_partoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_partoRow(ByVal CodParto As String, ByVal CodHospitalizacion As String, ByVal TipoParto As String, ByVal Anestesia As String, ByVal CordonUmbilical As String, ByVal LiquidoAmniotico As String, ByVal Placenta As String, ByVal Reanimacion As String, ByVal DrogasUsadas As String, ByVal paciente As String) As dt_partoRow
            Dim rowdt_partoRow As dt_partoRow = CType(Me.NewRow,dt_partoRow)
            Dim columnValuesArray() As Object = New Object() {CodParto, CodHospitalizacion, TipoParto, Anestesia, CordonUmbilical, LiquidoAmniotico, Placenta, Reanimacion, DrogasUsadas, paciente}
            rowdt_partoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_partoRow)
            Return rowdt_partoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCodParto(ByVal CodParto As String) As dt_partoRow
            Return CType(Me.Rows.Find(New Object() {CodParto}),dt_partoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_partoDataTable = CType(MyBase.Clone,dt_partoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_partoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodParto = MyBase.Columns("CodParto")
            Me.columnCodHospitalizacion = MyBase.Columns("CodHospitalizacion")
            Me.columnTipoParto = MyBase.Columns("TipoParto")
            Me.columnAnestesia = MyBase.Columns("Anestesia")
            Me.columnCordonUmbilical = MyBase.Columns("CordonUmbilical")
            Me.columnLiquidoAmniotico = MyBase.Columns("LiquidoAmniotico")
            Me.columnPlacenta = MyBase.Columns("Placenta")
            Me.columnReanimacion = MyBase.Columns("Reanimacion")
            Me.columnDrogasUsadas = MyBase.Columns("DrogasUsadas")
            Me.columnpaciente = MyBase.Columns("paciente")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodParto = New Global.System.Data.DataColumn("CodParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodParto)
            Me.columnCodHospitalizacion = New Global.System.Data.DataColumn("CodHospitalizacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodHospitalizacion)
            Me.columnTipoParto = New Global.System.Data.DataColumn("TipoParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoParto)
            Me.columnAnestesia = New Global.System.Data.DataColumn("Anestesia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnestesia)
            Me.columnCordonUmbilical = New Global.System.Data.DataColumn("CordonUmbilical", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCordonUmbilical)
            Me.columnLiquidoAmniotico = New Global.System.Data.DataColumn("LiquidoAmniotico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLiquidoAmniotico)
            Me.columnPlacenta = New Global.System.Data.DataColumn("Placenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlacenta)
            Me.columnReanimacion = New Global.System.Data.DataColumn("Reanimacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReanimacion)
            Me.columnDrogasUsadas = New Global.System.Data.DataColumn("DrogasUsadas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrogasUsadas)
            Me.columnpaciente = New Global.System.Data.DataColumn("paciente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaciente)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodParto}, true))
            Me.columnCodParto.AllowDBNull = false
            Me.columnCodParto.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_partoRow() As dt_partoRow
            Return CType(Me.NewRow,dt_partoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_partoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_partoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_partoRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_partoRowChanged(Me, New dt_partoRowChangeEvent(CType(e.Row,dt_partoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_partoRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_partoRowChanging(Me, New dt_partoRowChangeEvent(CType(e.Row,dt_partoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_partoRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_partoRowDeleted(Me, New dt_partoRowChangeEvent(CType(e.Row,dt_partoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_partoRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_partoRowDeleting(Me, New dt_partoRowChangeEvent(CType(e.Row,dt_partoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_partoRow(ByVal row As dt_partoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Parto = New Ds_Parto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_partoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_antecedentesDataTable
        Inherits Global.System.Data.TypedTableBase(Of dt_antecedentesRow)
        
        Private columnCodParto As Global.System.Data.DataColumn
        
        Private columnGestacion As Global.System.Data.DataColumn
        
        Private columnParidad As Global.System.Data.DataColumn
        
        Private columnTermino As Global.System.Data.DataColumn
        
        Private columnPrematuros As Global.System.Data.DataColumn
        
        Private columnAbortos As Global.System.Data.DataColumn
        
        Private columnObito As Global.System.Data.DataColumn
        
        Private columnFactoresMedicoRiesgo As Global.System.Data.DataColumn
        
        Private columnTiempoGestacion As Global.System.Data.DataColumn
        
        Private columnPatologiaEmbarazo As Global.System.Data.DataColumn
        
        Private columnFechaParto As Global.System.Data.DataColumn
        
        Private columnHora As Global.System.Data.DataColumn
        
        Private columnIndicioLaborParto As Global.System.Data.DataColumn
        
        Private columnRPMCaracteristicas As Global.System.Data.DataColumn
        
        Private columnDrogasLaborParto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_antecedentes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GestacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGestacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ParidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrematurosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrematuros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AbortosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbortos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ObitoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactoresMedicoRiesgoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoresMedicoRiesgo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TiempoGestacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTiempoGestacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PatologiaEmbarazoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatologiaEmbarazo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HoraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IndicioLaborPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndicioLaborParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RPMCaracteristicasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPMCaracteristicas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DrogasLaborPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrogasLaborParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_antecedentesRow
            Get
                Return CType(Me.Rows(index),dt_antecedentesRow)
            End Get
        End Property
        
        Public Event dt_antecedentesRowChanging As dt_antecedentesRowChangeEventHandler
        
        Public Event dt_antecedentesRowChanged As dt_antecedentesRowChangeEventHandler
        
        Public Event dt_antecedentesRowDeleting As dt_antecedentesRowChangeEventHandler
        
        Public Event dt_antecedentesRowDeleted As dt_antecedentesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_antecedentesRow(ByVal row As dt_antecedentesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_antecedentesRow(ByVal parentdt_partoRowBydt_parto_dt_antecedentes As dt_partoRow, ByVal Gestacion As String, ByVal Paridad As String, ByVal Termino As String, ByVal Prematuros As String, ByVal Abortos As String, ByVal Obito As String, ByVal FactoresMedicoRiesgo As String, ByVal TiempoGestacion As String, ByVal PatologiaEmbarazo As String, ByVal FechaParto As String, ByVal Hora As String, ByVal IndicioLaborParto As String, ByVal RPMCaracteristicas As String, ByVal DrogasLaborParto As String) As dt_antecedentesRow
            Dim rowdt_antecedentesRow As dt_antecedentesRow = CType(Me.NewRow,dt_antecedentesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Gestacion, Paridad, Termino, Prematuros, Abortos, Obito, FactoresMedicoRiesgo, TiempoGestacion, PatologiaEmbarazo, FechaParto, Hora, IndicioLaborParto, RPMCaracteristicas, DrogasLaborParto}
            If (Not (parentdt_partoRowBydt_parto_dt_antecedentes) Is Nothing) Then
                columnValuesArray(0) = parentdt_partoRowBydt_parto_dt_antecedentes(0)
            End If
            rowdt_antecedentesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_antecedentesRow)
            Return rowdt_antecedentesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_antecedentesDataTable = CType(MyBase.Clone,dt_antecedentesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_antecedentesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodParto = MyBase.Columns("CodParto")
            Me.columnGestacion = MyBase.Columns("Gestacion")
            Me.columnParidad = MyBase.Columns("Paridad")
            Me.columnTermino = MyBase.Columns("Termino")
            Me.columnPrematuros = MyBase.Columns("Prematuros")
            Me.columnAbortos = MyBase.Columns("Abortos")
            Me.columnObito = MyBase.Columns("Obito")
            Me.columnFactoresMedicoRiesgo = MyBase.Columns("FactoresMedicoRiesgo")
            Me.columnTiempoGestacion = MyBase.Columns("TiempoGestacion")
            Me.columnPatologiaEmbarazo = MyBase.Columns("PatologiaEmbarazo")
            Me.columnFechaParto = MyBase.Columns("FechaParto")
            Me.columnHora = MyBase.Columns("Hora")
            Me.columnIndicioLaborParto = MyBase.Columns("IndicioLaborParto")
            Me.columnRPMCaracteristicas = MyBase.Columns("RPMCaracteristicas")
            Me.columnDrogasLaborParto = MyBase.Columns("DrogasLaborParto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodParto = New Global.System.Data.DataColumn("CodParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodParto)
            Me.columnGestacion = New Global.System.Data.DataColumn("Gestacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGestacion)
            Me.columnParidad = New Global.System.Data.DataColumn("Paridad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParidad)
            Me.columnTermino = New Global.System.Data.DataColumn("Termino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermino)
            Me.columnPrematuros = New Global.System.Data.DataColumn("Prematuros", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrematuros)
            Me.columnAbortos = New Global.System.Data.DataColumn("Abortos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbortos)
            Me.columnObito = New Global.System.Data.DataColumn("Obito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObito)
            Me.columnFactoresMedicoRiesgo = New Global.System.Data.DataColumn("FactoresMedicoRiesgo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoresMedicoRiesgo)
            Me.columnTiempoGestacion = New Global.System.Data.DataColumn("TiempoGestacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTiempoGestacion)
            Me.columnPatologiaEmbarazo = New Global.System.Data.DataColumn("PatologiaEmbarazo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatologiaEmbarazo)
            Me.columnFechaParto = New Global.System.Data.DataColumn("FechaParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaParto)
            Me.columnHora = New Global.System.Data.DataColumn("Hora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHora)
            Me.columnIndicioLaborParto = New Global.System.Data.DataColumn("IndicioLaborParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndicioLaborParto)
            Me.columnRPMCaracteristicas = New Global.System.Data.DataColumn("RPMCaracteristicas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPMCaracteristicas)
            Me.columnDrogasLaborParto = New Global.System.Data.DataColumn("DrogasLaborParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrogasLaborParto)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_antecedentesRow() As dt_antecedentesRow
            Return CType(Me.NewRow,dt_antecedentesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_antecedentesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_antecedentesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_antecedentesRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_antecedentesRowChanged(Me, New dt_antecedentesRowChangeEvent(CType(e.Row,dt_antecedentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_antecedentesRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_antecedentesRowChanging(Me, New dt_antecedentesRowChangeEvent(CType(e.Row,dt_antecedentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_antecedentesRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_antecedentesRowDeleted(Me, New dt_antecedentesRowChangeEvent(CType(e.Row,dt_antecedentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_antecedentesRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_antecedentesRowDeleting(Me, New dt_antecedentesRowChangeEvent(CType(e.Row,dt_antecedentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_antecedentesRow(ByVal row As dt_antecedentesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Parto = New Ds_Parto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_antecedentesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_nacimientoDataTable
        Inherits Global.System.Data.TypedTableBase(Of dt_nacimientoRow)
        
        Private columnCodParto As Global.System.Data.DataColumn
        
        Private columnNombreRN As Global.System.Data.DataColumn
        
        Private columnSexo As Global.System.Data.DataColumn
        
        Private columnSemanas As Global.System.Data.DataColumn
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private columnhora As Global.System.Data.DataColumn
        
        Private columntalla As Global.System.Data.DataColumn
        
        Private columnpeso As Global.System.Data.DataColumn
        
        Private columnpc As Global.System.Data.DataColumn
        
        Private columnPTX As Global.System.Data.DataColumn
        
        Private columnpabd As Global.System.Data.DataColumn
        
        Private columnFC As Global.System.Data.DataColumn
        
        Private columner As Global.System.Data.DataColumn
        
        Private columntm As Global.System.Data.DataColumn
        
        Private columnref As Global.System.Data.DataColumn
        
        Private columncol As Global.System.Data.DataColumn
        
        Private columnTemperatura As Global.System.Data.DataColumn
        
        Private columnObservaciones As Global.System.Data.DataColumn
        
        Private columnExamenFisico As Global.System.Data.DataColumn
        
        Private columnDiagnostico As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_nacimiento"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodPartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodParto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreRNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreRN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SexoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSexo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SemanasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSemanas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property horaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tallaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntalla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pabdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpabd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property erColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property refColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnref
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property colColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TemperaturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTemperatura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExamenFisicoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExamenFisico
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiagnosticoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiagnostico
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_nacimientoRow
            Get
                Return CType(Me.Rows(index),dt_nacimientoRow)
            End Get
        End Property
        
        Public Event dt_nacimientoRowChanging As dt_nacimientoRowChangeEventHandler
        
        Public Event dt_nacimientoRowChanged As dt_nacimientoRowChangeEventHandler
        
        Public Event dt_nacimientoRowDeleting As dt_nacimientoRowChangeEventHandler
        
        Public Event dt_nacimientoRowDeleted As dt_nacimientoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_nacimientoRow(ByVal row As dt_nacimientoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_nacimientoRow( _
                    ByVal parentdt_partoRowBydt_parto_dt_nacimiento As dt_partoRow,  _
                    ByVal NombreRN As String,  _
                    ByVal Sexo As String,  _
                    ByVal Semanas As String,  _
                    ByVal Fecha As String,  _
                    ByVal hora As String,  _
                    ByVal talla As String,  _
                    ByVal peso As String,  _
                    ByVal pc As String,  _
                    ByVal PTX As String,  _
                    ByVal pabd As String,  _
                    ByVal FC As String,  _
                    ByVal er As String,  _
                    ByVal tm As String,  _
                    ByVal ref As String,  _
                    ByVal col As String,  _
                    ByVal Temperatura As String,  _
                    ByVal Observaciones As String,  _
                    ByVal ExamenFisico As String,  _
                    ByVal Diagnostico As String) As dt_nacimientoRow
            Dim rowdt_nacimientoRow As dt_nacimientoRow = CType(Me.NewRow,dt_nacimientoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NombreRN, Sexo, Semanas, Fecha, hora, talla, peso, pc, PTX, pabd, FC, er, tm, ref, col, Temperatura, Observaciones, ExamenFisico, Diagnostico}
            If (Not (parentdt_partoRowBydt_parto_dt_nacimiento) Is Nothing) Then
                columnValuesArray(0) = parentdt_partoRowBydt_parto_dt_nacimiento(0)
            End If
            rowdt_nacimientoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_nacimientoRow)
            Return rowdt_nacimientoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_nacimientoDataTable = CType(MyBase.Clone,dt_nacimientoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_nacimientoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodParto = MyBase.Columns("CodParto")
            Me.columnNombreRN = MyBase.Columns("NombreRN")
            Me.columnSexo = MyBase.Columns("Sexo")
            Me.columnSemanas = MyBase.Columns("Semanas")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnhora = MyBase.Columns("hora")
            Me.columntalla = MyBase.Columns("talla")
            Me.columnpeso = MyBase.Columns("peso")
            Me.columnpc = MyBase.Columns("pc")
            Me.columnPTX = MyBase.Columns("PTX")
            Me.columnpabd = MyBase.Columns("pabd")
            Me.columnFC = MyBase.Columns("FC")
            Me.columner = MyBase.Columns("er")
            Me.columntm = MyBase.Columns("tm")
            Me.columnref = MyBase.Columns("ref")
            Me.columncol = MyBase.Columns("col")
            Me.columnTemperatura = MyBase.Columns("Temperatura")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnExamenFisico = MyBase.Columns("ExamenFisico")
            Me.columnDiagnostico = MyBase.Columns("Diagnostico")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodParto = New Global.System.Data.DataColumn("CodParto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodParto)
            Me.columnNombreRN = New Global.System.Data.DataColumn("NombreRN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreRN)
            Me.columnSexo = New Global.System.Data.DataColumn("Sexo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSexo)
            Me.columnSemanas = New Global.System.Data.DataColumn("Semanas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSemanas)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnhora = New Global.System.Data.DataColumn("hora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhora)
            Me.columntalla = New Global.System.Data.DataColumn("talla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntalla)
            Me.columnpeso = New Global.System.Data.DataColumn("peso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso)
            Me.columnpc = New Global.System.Data.DataColumn("pc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpc)
            Me.columnPTX = New Global.System.Data.DataColumn("PTX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTX)
            Me.columnpabd = New Global.System.Data.DataColumn("pabd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpabd)
            Me.columnFC = New Global.System.Data.DataColumn("FC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFC)
            Me.columner = New Global.System.Data.DataColumn("er", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columner)
            Me.columntm = New Global.System.Data.DataColumn("tm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntm)
            Me.columnref = New Global.System.Data.DataColumn("ref", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnref)
            Me.columncol = New Global.System.Data.DataColumn("col", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncol)
            Me.columnTemperatura = New Global.System.Data.DataColumn("Temperatura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTemperatura)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnExamenFisico = New Global.System.Data.DataColumn("ExamenFisico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExamenFisico)
            Me.columnDiagnostico = New Global.System.Data.DataColumn("Diagnostico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiagnostico)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_nacimientoRow() As dt_nacimientoRow
            Return CType(Me.NewRow,dt_nacimientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_nacimientoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_nacimientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_nacimientoRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_nacimientoRowChanged(Me, New dt_nacimientoRowChangeEvent(CType(e.Row,dt_nacimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_nacimientoRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_nacimientoRowChanging(Me, New dt_nacimientoRowChangeEvent(CType(e.Row,dt_nacimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_nacimientoRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_nacimientoRowDeleted(Me, New dt_nacimientoRowChangeEvent(CType(e.Row,dt_nacimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_nacimientoRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_nacimientoRowDeleting(Me, New dt_nacimientoRowChangeEvent(CType(e.Row,dt_nacimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_nacimientoRow(ByVal row As dt_nacimientoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Ds_Parto = New Ds_Parto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_nacimientoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_partoRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_parto As dt_partoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_parto = CType(Me.Table,dt_partoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodParto() As String
            Get
                Return CType(Me(Me.tabledt_parto.CodPartoColumn),String)
            End Get
            Set
                Me(Me.tabledt_parto.CodPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodHospitalizacion() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.CodHospitalizacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodHospitalizacion' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.CodHospitalizacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoParto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.TipoPartoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoParto' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.TipoPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Anestesia() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.AnestesiaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Anestesia' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.AnestesiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CordonUmbilical() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.CordonUmbilicalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CordonUmbilical' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.CordonUmbilicalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LiquidoAmniotico() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.LiquidoAmnioticoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LiquidoAmniotico' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.LiquidoAmnioticoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Placenta() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.PlacentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Placenta' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.PlacentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Reanimacion() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.ReanimacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Reanimacion' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.ReanimacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DrogasUsadas() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.DrogasUsadasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DrogasUsadas' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.DrogasUsadasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property paciente() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_parto.pacienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'paciente' de la tabla 'dt_parto' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_parto.pacienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodHospitalizacionNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.CodHospitalizacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodHospitalizacionNull()
            Me(Me.tabledt_parto.CodHospitalizacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoPartoNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.TipoPartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoPartoNull()
            Me(Me.tabledt_parto.TipoPartoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAnestesiaNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.AnestesiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAnestesiaNull()
            Me(Me.tabledt_parto.AnestesiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCordonUmbilicalNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.CordonUmbilicalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCordonUmbilicalNull()
            Me(Me.tabledt_parto.CordonUmbilicalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLiquidoAmnioticoNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.LiquidoAmnioticoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLiquidoAmnioticoNull()
            Me(Me.tabledt_parto.LiquidoAmnioticoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPlacentaNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.PlacentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPlacentaNull()
            Me(Me.tabledt_parto.PlacentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReanimacionNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.ReanimacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReanimacionNull()
            Me(Me.tabledt_parto.ReanimacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDrogasUsadasNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.DrogasUsadasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDrogasUsadasNull()
            Me(Me.tabledt_parto.DrogasUsadasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspacienteNull() As Boolean
            Return Me.IsNull(Me.tabledt_parto.pacienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpacienteNull()
            Me(Me.tabledt_parto.pacienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Getdt_antecedentesRows() As dt_antecedentesRow()
            If (Me.Table.ChildRelations("dt_parto_dt_antecedentes") Is Nothing) Then
                Return New dt_antecedentesRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("dt_parto_dt_antecedentes")),dt_antecedentesRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Getdt_nacimientoRows() As dt_nacimientoRow()
            If (Me.Table.ChildRelations("dt_parto_dt_nacimiento") Is Nothing) Then
                Return New dt_nacimientoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("dt_parto_dt_nacimiento")),dt_nacimientoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_antecedentesRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_antecedentes As dt_antecedentesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_antecedentes = CType(Me.Table,dt_antecedentesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodParto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.CodPartoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodParto' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.CodPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Gestacion() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.GestacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Gestacion' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.GestacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Paridad() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.ParidadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Paridad' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.ParidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Termino() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.TerminoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Termino' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.TerminoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Prematuros() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.PrematurosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Prematuros' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.PrematurosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abortos() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.AbortosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Abortos' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.AbortosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Obito() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.ObitoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Obito' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.ObitoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactoresMedicoRiesgo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.FactoresMedicoRiesgoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FactoresMedicoRiesgo' de la tabla 'dt_antecedentes' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.FactoresMedicoRiesgoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TiempoGestacion() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.TiempoGestacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TiempoGestacion' de la tabla 'dt_antecedentes' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.TiempoGestacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PatologiaEmbarazo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.PatologiaEmbarazoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PatologiaEmbarazo' de la tabla 'dt_antecedentes' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.PatologiaEmbarazoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaParto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.FechaPartoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaParto' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.FechaPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Hora() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.HoraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Hora' de la tabla 'dt_antecedentes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.HoraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IndicioLaborParto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.IndicioLaborPartoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IndicioLaborParto' de la tabla 'dt_antecedentes' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.IndicioLaborPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RPMCaracteristicas() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.RPMCaracteristicasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RPMCaracteristicas' de la tabla 'dt_antecedentes' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.RPMCaracteristicasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DrogasLaborParto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_antecedentes.DrogasLaborPartoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DrogasLaborParto' de la tabla 'dt_antecedentes' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_antecedentes.DrogasLaborPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dt_partoRow() As dt_partoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("dt_parto_dt_antecedentes")),dt_partoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("dt_parto_dt_antecedentes"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodPartoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.CodPartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodPartoNull()
            Me(Me.tabledt_antecedentes.CodPartoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGestacionNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.GestacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGestacionNull()
            Me(Me.tabledt_antecedentes.GestacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsParidadNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.ParidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetParidadNull()
            Me(Me.tabledt_antecedentes.ParidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.TerminoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminoNull()
            Me(Me.tabledt_antecedentes.TerminoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrematurosNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.PrematurosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrematurosNull()
            Me(Me.tabledt_antecedentes.PrematurosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbortosNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.AbortosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbortosNull()
            Me(Me.tabledt_antecedentes.AbortosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsObitoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.ObitoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetObitoNull()
            Me(Me.tabledt_antecedentes.ObitoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFactoresMedicoRiesgoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.FactoresMedicoRiesgoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFactoresMedicoRiesgoNull()
            Me(Me.tabledt_antecedentes.FactoresMedicoRiesgoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTiempoGestacionNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.TiempoGestacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTiempoGestacionNull()
            Me(Me.tabledt_antecedentes.TiempoGestacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPatologiaEmbarazoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.PatologiaEmbarazoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPatologiaEmbarazoNull()
            Me(Me.tabledt_antecedentes.PatologiaEmbarazoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaPartoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.FechaPartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaPartoNull()
            Me(Me.tabledt_antecedentes.FechaPartoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHoraNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.HoraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHoraNull()
            Me(Me.tabledt_antecedentes.HoraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIndicioLaborPartoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.IndicioLaborPartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIndicioLaborPartoNull()
            Me(Me.tabledt_antecedentes.IndicioLaborPartoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRPMCaracteristicasNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.RPMCaracteristicasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRPMCaracteristicasNull()
            Me(Me.tabledt_antecedentes.RPMCaracteristicasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDrogasLaborPartoNull() As Boolean
            Return Me.IsNull(Me.tabledt_antecedentes.DrogasLaborPartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDrogasLaborPartoNull()
            Me(Me.tabledt_antecedentes.DrogasLaborPartoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_nacimientoRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_nacimiento As dt_nacimientoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_nacimiento = CType(Me.Table,dt_nacimientoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodParto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.CodPartoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodParto' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.CodPartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreRN() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.NombreRNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreRN' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.NombreRNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sexo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.SexoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Sexo' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.SexoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Semanas() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.SemanasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Semanas' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.SemanasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fecha() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.FechaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Fecha' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hora() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.horaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'hora' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.horaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property talla() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.tallaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'talla' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.tallaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property peso() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.pesoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'peso' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.pesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pc() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.pcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'pc' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.pcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTX() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.PTXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PTX' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.PTXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pabd() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.pabdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'pabd' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.pabdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FC() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.FCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FC' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.FCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property er() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.erColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'er' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.erColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tm() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.tmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tm' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.tmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ref() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.refColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ref' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.refColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property col() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.colColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'col' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.colColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Temperatura() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.TemperaturaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Temperatura' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.TemperaturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.ObservacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observaciones' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.ObservacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExamenFisico() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.ExamenFisicoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ExamenFisico' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.ExamenFisicoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diagnostico() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_nacimiento.DiagnosticoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Diagnostico' de la tabla 'dt_nacimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_nacimiento.DiagnosticoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dt_partoRow() As dt_partoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("dt_parto_dt_nacimiento")),dt_partoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("dt_parto_dt_nacimiento"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodPartoNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.CodPartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodPartoNull()
            Me(Me.tabledt_nacimiento.CodPartoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreRNNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.NombreRNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreRNNull()
            Me(Me.tabledt_nacimiento.NombreRNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSexoNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.SexoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSexoNull()
            Me(Me.tabledt_nacimiento.SexoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSemanasNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.SemanasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSemanasNull()
            Me(Me.tabledt_nacimiento.SemanasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaNull()
            Me(Me.tabledt_nacimiento.FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshoraNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.horaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethoraNull()
            Me(Me.tabledt_nacimiento.horaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstallaNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.tallaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettallaNull()
            Me(Me.tabledt_nacimiento.tallaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspesoNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.pesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpesoNull()
            Me(Me.tabledt_nacimiento.pesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspcNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.pcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpcNull()
            Me(Me.tabledt_nacimiento.pcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTXNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.PTXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTXNull()
            Me(Me.tabledt_nacimiento.PTXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspabdNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.pabdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpabdNull()
            Me(Me.tabledt_nacimiento.pabdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFCNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.FCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFCNull()
            Me(Me.tabledt_nacimiento.FCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IserNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.erColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SeterNull()
            Me(Me.tabledt_nacimiento.erColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstmNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.tmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettmNull()
            Me(Me.tabledt_nacimiento.tmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrefNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.refColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrefNull()
            Me(Me.tabledt_nacimiento.refColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscolNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.colColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcolNull()
            Me(Me.tabledt_nacimiento.colColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTemperaturaNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.TemperaturaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTemperaturaNull()
            Me(Me.tabledt_nacimiento.TemperaturaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.ObservacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetObservacionesNull()
            Me(Me.tabledt_nacimiento.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExamenFisicoNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.ExamenFisicoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExamenFisicoNull()
            Me(Me.tabledt_nacimiento.ExamenFisicoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiagnosticoNull() As Boolean
            Return Me.IsNull(Me.tabledt_nacimiento.DiagnosticoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiagnosticoNull()
            Me(Me.tabledt_nacimiento.DiagnosticoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_partoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_partoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_partoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_partoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_antecedentesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_antecedentesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_antecedentesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_antecedentesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_nacimientoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_nacimientoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_nacimientoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_nacimientoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
